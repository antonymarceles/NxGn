package com.fragrancial.dbUpdate;

import java.io.File;
import java.util.Calendar;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import com.excel.classes.excelreader;

public class fragranceX {

	public static void main(String[] args) throws Exception {
		
		dbConnection db = new dbConnection();
		db.connectDB();
		
	  	//Handle Input File
	  	String inputFile = "outgoingfeed_tab.xls";
		excelreader excelReader = new excelreader();
		excelReader.setInputFile(inputFile);
				
	    //Open & Read Input File
	    File inputWorkbook = new File(inputFile);
	    Workbook w;
	    String sql_postmeta ;
	    
	    //Reset Stock Count to 0 for all products
	    String sql_resetData = "UPDATE wp_postmeta SET meta_value = '0' WHERE meta_key = '_stock' and post_id in  (select * from (SELECT post_id FROM wp_postmeta wp_pm where meta_value = 'fragranceX' and meta_key = '_seller') mockalias )"; 
        db.executeQuery(sql_resetData);

	    //Receive Date/Time fields for Database
		Calendar calendar = Calendar.getInstance();
		java.sql.Timestamp ourJavaTimestampObject = new java.sql.Timestamp(calendar.getTime().getTime());
		String datetimestamp = String.valueOf(ourJavaTimestampObject).substring(0, 19);
		 
	    try {
		      w = Workbook.getWorkbook(inputWorkbook);
		      Sheet sheet = w.getSheet(0);		

		      String post_content = "", post_title = "", post_excerpt = "", post_category="", post_name = "", post_brand="", post_sku = "", post_image="", post_regularprice="", post_price=" ", post_saleprice="", post_stock="";
		      
		      // Loop over Columns & Rows and Write Data to Output File
	    	  for (int i = 1; i <= sheet.getRows(); i++) {
	    		  String sql_posts = "INSERT INTO wp_posts (post_author, post_date, post_date_gmt, post_content, post_title, post_excerpt, post_status, comment_status, ping_status, post_password, post_name, to_ping, pinged, post_modified, post_modified_gmt, post_content_filtered, post_parent, guid, menu_order, post_type, post_mime_type, comment_count) Values ";
	    		    
						post_sku = sheet.getCell(0, i).getContents();

	    			    post_excerpt = sheet.getCell(2, i).getContents().replace("'", "").split("\\.")[0].concat(".");
						post_brand = sheet.getCell(3, i).getContents().replace("'", "");
						post_title = sheet.getCell(1, i).getContents().replace("'", "") + " - " + sheet.getCell(4, i).getContents().replace("'", "");
						post_content = "<b>" + sheet.getCell(1, i).getContents().replace("'", "") + "</b>: " + sheet.getCell(2, i).getContents().replace("'", "");
						
						post_name = (post_title+" - "+sheet.getCell(5, i).getContents()).replace("'", "").replace(" - ","-").replace(" -- ","-").replace(" + ", "-").toLowerCase().replace(" .", "-").replace(".", "-").replace(" / ", "-").replace("/","-").replace("(", "").replace(")","").replace("&", "-").replace("%", "-").replace("+", "-").replace("!", "-");
						post_name = (post_name).replace(" ", "-").replace("----","-").replace("---","-").replace("--","-");
						 
						//Setting & Manipulating Prices
						post_regularprice = sheet.getCell(6, i).getContents();
						post_saleprice = String.valueOf(Math.floor(((Double.parseDouble(sheet.getCell(7, i).getContents()))*(1.17+(Math.random()* (.16)))) * 100) / 100);
						if (post_regularprice.equals("") || post_regularprice.equals(null)) {
							post_regularprice = "-";
						} else if (Double.parseDouble(post_regularprice) < Double.parseDouble(post_saleprice)) {
							post_regularprice = "-";  
						}
						if (Double.parseDouble(post_saleprice) < 1) {
							post_saleprice = "0.99";
						}
						
						post_stock = String.valueOf(((Integer.parseInt(sheet.getCell(10, i).getContents()))));
						post_image = sheet.getCell(8, i).getContents();
		    		  
						// Find Category ID from term_taxnonomy_id in wp_term_taxonomy table
						if (sheet.getCell(5, i).getContents().equalsIgnoreCase("Men")) {
						  post_category = "16";
						} else if (sheet.getCell(5, i).getContents().equalsIgnoreCase("Women")) {
						  post_category = "17";	  
						}

	    		  // Retrieve post ID to see if the product already exists in database
			      String post_id = db.executeQuery("select post_id from wp_postmeta where meta_key='_sku' and meta_value = '"+sheet.getCell(0, i).getContents()+"'");
			      
			      if (post_id == null || post_id == "") {
				      System.out.println("Inserting Data for SKU " + sheet.getCell(0, i).getContents()+", i.e. Line Number " +i);
				      
				      //Insert into Posts table
				      sql_posts += "('1', '"+datetimestamp+"', '"+datetimestamp+"', '"+ post_content +"', '"+ post_title +"', '"+ post_excerpt +"', 'publish', 'open', 'open', '', '"+ post_name +"', '', '', '"+datetimestamp+"', '"+datetimestamp+"', '', '0', 'TEST', '0', 'product', '', '0' )";
				      db.executeQuery(sql_posts);
				      String addpost_id = db.executeQuery("select id from wp_posts where post_name = '"+post_name+"'");
	
				      //Insert into PostsMeta table				      
				      if (!post_regularprice.equals("-")) {
				    	  sql_postmeta = "INSERT INTO wp_postmeta (post_id, meta_key , meta_value) Values ("+addpost_id+",'_sku', "+post_sku+"),("+addpost_id+",'_stock', '500'),("+addpost_id+",'_tax_status', 'taxable'),("+addpost_id+",'_backorders', 'no'),("+addpost_id+",'_downloadable', 'no'),("+addpost_id+",'_virtual', 'no'),("+addpost_id+",'_visibility', 'visible'),("+addpost_id+",'_stock_status', 'instock'),("+addpost_id+",'_manage_stock', 'yes'),("+addpost_id+",'_sale_price', "+post_saleprice+"),("+addpost_id+",'_price', "+post_saleprice+"),("+addpost_id+",'image_link1', '"+post_image+"'),("+addpost_id+",'brand', '"+post_brand+"'),("+addpost_id+",'_regular_price', "+post_regularprice+"),("+addpost_id+",'_seller', 'fragranceX')";
						  db.executeQuery(sql_postmeta);
					  } else {
						  sql_postmeta = "INSERT INTO wp_postmeta (post_id, meta_key , meta_value) Values ("+addpost_id+",'_sku', "+post_sku+"),("+addpost_id+",'_stock', '500'),("+addpost_id+",'_tax_status', 'taxable'),("+addpost_id+",'_backorders', 'no'),("+addpost_id+",'_downloadable', 'no'),("+addpost_id+",'_virtual', 'no'),("+addpost_id+",'_visibility', 'visible'),("+addpost_id+",'_stock_status', 'instock'),("+addpost_id+",'_manage_stock', 'yes'),("+addpost_id+",'_sale_price', "+post_saleprice+"),("+addpost_id+",'_price', "+post_saleprice+"),("+addpost_id+",'image_link1', '"+post_image+"'),("+addpost_id+",'brand', '"+post_brand+"'),("+addpost_id+",'_seller', 'fragranceX')";					
						  db.executeQuery(sql_postmeta);
					  }
				      
				      //Insert into Categories table				      						
				      sql_postmeta = "INSERT INTO wp_term_relationships (object_id, term_taxonomy_id , term_order) Values ("+addpost_id+",'"+post_category+"', '0')"; 
				      db.executeQuery(sql_postmeta);
					  
			      } else {
				      System.out.println("Updating Data for SKU " + sheet.getCell(0, i).getContents()+", i.e. Line Number " +i);		
			    	  
			    	  sql_postmeta = "UPDATE wp_posts SET post_name = '"+post_name+"' WHERE id = '"+post_id+"'"; 
     				  db.executeQuery(sql_postmeta);	
     				  
				      //Update PostsMeta table				      
				      if (!post_regularprice.equals("-")) {
						  	sql_postmeta = "UPDATE wp_postmeta SET meta_value = "+post_regularprice+" WHERE post_id = "+post_id+" and  meta_key = '_regular_price'"; 
						  	db.executeQuery(sql_postmeta);	
					  } 
				      sql_postmeta = "UPDATE wp_postmeta SET meta_value = "+post_saleprice+" WHERE post_id = "+post_id+" and  meta_key = '_sale_price'"; 
     				  db.executeQuery(sql_postmeta);	
				      sql_postmeta = "UPDATE wp_postmeta SET meta_value = "+post_saleprice+" WHERE post_id = "+post_id+" and  meta_key = '_price'"; 
     				  db.executeQuery(sql_postmeta);	     				  
				      sql_postmeta = "UPDATE wp_postmeta SET meta_value = "+post_stock+" WHERE post_id = "+post_id+" and  meta_key = '_stock'"; 
				      db.executeQuery(sql_postmeta);

			      } 
		      }
			  
	    } catch (BiffException e) {
	    	e.printStackTrace();
	    }		
	    
		db.closeDB();
	}
}
